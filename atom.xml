<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>God_Max_Me&#39;s Blog</title>
  
  <subtitle>月是人间散客，卿是人间绝色，亦是人间难得</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-08-27T13:43:40.545Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>God_Max_Me</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ABC317E-Avoid-Eye-Contact题解</title>
    <link href="http://example.com/2023/08/27/ABC317E-Avoid-Eye-Contact%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2023/08/27/ABC317E-Avoid-Eye-Contact%E9%A2%98%E8%A7%A3/</id>
    <published>2023-08-27T13:41:35.000Z</published>
    <updated>2023-08-27T13:43:40.545Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>一个地图，其中有一些守卫，他们的视线是一个直线，直到碰到障碍物，现在主角在 $\left(qx,qy\right)$，在地图上是 <code>S</code>，现在要去终点 $\left(zx,zy\right)$，不能出现在守卫视线中，问能否到达，若能，输出最小花费，若不能，输出 $-1$。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>首先处理一下守卫的问题，每找到一个守卫就将他视线内的直线变成 <code>#</code>，然后朴素 bfs，没什么好讲的，但是要注意，守卫的视线只能在 <code>.</code> 的方格内穿过，遇到其他方格会被挡住。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> P&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(P &amp;x)</span></span>&#123;</span><br><span class="line">   P res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">   <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">   <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   res=res*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line">x=res*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> T=<span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> mapp[<span class="number">2020</span>][<span class="number">2020</span>];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> xx[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> yy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">map&lt;<span class="type">char</span>,<span class="type">int</span>&gt; fx;</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">2020</span>][<span class="number">2020</span>];</span><br><span class="line"><span class="type">bool</span> pd[<span class="number">2020</span>][<span class="number">2020</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Init</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> fx)</span></span>&#123;</span><br><span class="line">pd[x][y]=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> nx=x+xx[fx];</span><br><span class="line"><span class="type">int</span> ny=y+yy[fx];</span><br><span class="line"><span class="keyword">if</span>(nx&gt;=<span class="number">1</span> &amp;&amp; nx&lt;=n &amp;&amp; ny&gt;=<span class="number">1</span> &amp;&amp; ny&lt;=m &amp;&amp; mapp[nx][ny]==<span class="string">&#x27;.&#x27;</span>) <span class="built_in">Init</span>(nx,ny,fx);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> qx,qy,zx,zy;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> x,y,s;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">queue&lt;node&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(node&#123;x,y,<span class="number">0</span>&#125;);</span><br><span class="line">vis[x][y]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line"><span class="type">int</span> X=q.<span class="built_in">front</span>().x;</span><br><span class="line"><span class="type">int</span> Y=q.<span class="built_in">front</span>().y;</span><br><span class="line"><span class="type">int</span> S=q.<span class="built_in">front</span>().s;</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span>(X==zx &amp;&amp; Y==zy)&#123;</span><br><span class="line">cout&lt;&lt;S&lt;&lt;endl;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">3</span>;++i)&#123;</span><br><span class="line"><span class="type">int</span> nx=X+xx[i];</span><br><span class="line"><span class="type">int</span> ny=Y+yy[i];</span><br><span class="line"><span class="keyword">if</span>(nx&gt;=<span class="number">1</span> &amp;&amp; nx&lt;=n &amp;&amp; ny&gt;=<span class="number">1</span> &amp;&amp; ny&lt;=m &amp;&amp; !vis[nx][ny] &amp;&amp; (mapp[nx][ny]==<span class="string">&#x27;.&#x27;</span> || mapp[nx][ny]==<span class="string">&#x27;G&#x27;</span>))&#123;</span><br><span class="line">vis[nx][ny]=<span class="number">1</span>;</span><br><span class="line">q.<span class="built_in">push</span>(node&#123;nx,ny,S+<span class="number">1</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n),<span class="built_in">read</span>(m);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</span><br><span class="line">cin&gt;&gt;mapp[i][j];</span><br><span class="line"><span class="keyword">if</span>(mapp[i][j]==<span class="string">&#x27;S&#x27;</span>) qx=i,qy=j;</span><br><span class="line"><span class="keyword">if</span>(mapp[i][j]==<span class="string">&#x27;G&#x27;</span>) zx=i,zy=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fx[<span class="string">&#x27;v&#x27;</span>]=<span class="number">0</span>;</span><br><span class="line">fx[<span class="string">&#x27;&lt;&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line">fx[<span class="string">&#x27;^&#x27;</span>]=<span class="number">2</span>;</span><br><span class="line">fx[<span class="string">&#x27;&gt;&#x27;</span>]=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(mapp[i][j]!=<span class="string">&#x27;.&#x27;</span> &amp;&amp; mapp[i][j]!=<span class="string">&#x27;S&#x27;</span> &amp;&amp; mapp[i][j]!=<span class="string">&#x27;#&#x27;</span> &amp;&amp; mapp[i][j]!=<span class="string">&#x27;G&#x27;</span>)&#123;</span><br><span class="line"><span class="type">int</span> ff=fx[mapp[i][j]];</span><br><span class="line"><span class="built_in">Init</span>(i,j,ff);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(pd[i][j]==<span class="number">1</span>) mapp[i][j]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">bfs</span>(qx,qy);</span><br><span class="line">cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;一个地图，其中有一些守卫，他们的视线是一个直线，直到碰到障碍物，现在主角在 $&#92;left(qx,qy&#92;right)$，在地图上是 &lt;code</summary>
      
    
    
    
    
    <category term="AT题解" scheme="http://example.com/tags/AT%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>ABC317D-President题解</title>
    <link href="http://example.com/2023/08/27/ABC317D-President%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2023/08/27/ABC317D-President%E9%A2%98%E8%A7%A3/</id>
    <published>2023-08-27T13:40:50.000Z</published>
    <updated>2023-08-27T13:43:41.889Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给定 $n$ 个区，每个区的价值为 $z_i$ ，现在有两个人竞争，我们想让第一个人赢，现在每个人每个区的支持人数分别为 $u,v$ ，哪方支持人数多，那么他就能获得这个区的价值，最后如果要使的第一个人获得的价值大于的二个人获得的价值，需要至少让多少人更改支持方。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>相当于就是说要选一些区的人改票，这能让我们想到背包DP，第一个人需要改票的人数为 $w_i$，显然 $w_i=\frac{u+v+1}{2}-u$，这相当于是背包容量，$z_i$ 即是背包物品价值。</p><p>转移方程如下：</p><script type="math/tex; mode=display">dp[j]=min(dp[j-z[i]]+w[i],dp[j])</script><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> P&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(P &amp;x)</span></span>&#123;</span><br><span class="line">   P res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">   <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">   <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   res=res*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line">x=res*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> T=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> w[<span class="number">120</span>],z[<span class="number">120</span>];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dp[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="type">int</span> u,v,c=<span class="number">0</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> res=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="built_in">memset</span>(dp,<span class="number">0x3f</span>,<span class="built_in">sizeof</span>(dp));</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line"><span class="built_in">read</span>(u),<span class="built_in">read</span>(v),<span class="built_in">read</span>(z[i]);</span><br><span class="line"><span class="keyword">if</span>(u&lt;v) w[i]=(u+v+<span class="number">1</span>)/<span class="number">2</span>-u;</span><br><span class="line">c+=z[i];</span><br><span class="line">&#125;</span><br><span class="line">dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=c;j&gt;=z[i];--j)&#123;</span><br><span class="line">dp[j]=<span class="built_in">min</span>(dp[j-z[i]]+w[i],dp[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=(c+<span class="number">1</span>)/<span class="number">2</span>;i&lt;=c;++i) res=<span class="built_in">min</span>(res,dp[i]);</span><br><span class="line">cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给定 $n$ 个区，每个区的价值为 $z_i$ ，现在有两个人竞争，我们想让第一个人赢，现在每个人每个区的支持人数分别为 $u,v$ ，哪方</summary>
      
    
    
    
    
    <category term="AT题解" scheme="http://example.com/tags/AT%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>ABC317C-Remembering-the-Days题解</title>
    <link href="http://example.com/2023/08/27/ABC317C-Remembering-the-Days%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2023/08/27/ABC317C-Remembering-the-Days%E9%A2%98%E8%A7%A3/</id>
    <published>2023-08-27T13:40:31.000Z</published>
    <updated>2023-08-27T13:43:38.818Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给定一个图，求其中任意两点之间距离的最大值，不能重复访问（类似于最长路（也许））。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>由于我赛时的时候脑子抽了不知道咋写，差点挂，最后写成了状压DP，设 $dp[i][S]$ 表示通过了集合 $S$ 的点，最后在 $i$ 点的最长路径。</p><p>那么转移方程可得：</p><script type="math/tex; mode=display">dp_{v,S\operatorname{xor} (2^v)}\gets\ \max\left\{dp_{u,s}+cost\right\}</script><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> P&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(P &amp;x)</span></span>&#123;</span><br><span class="line">   P res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">   <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">   <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   res=res*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line">x=res*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Max=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> to,w;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;node&gt; e[<span class="number">120</span>];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">120</span>][<span class="number">1</span>&lt;&lt;<span class="number">14</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n),<span class="built_in">read</span>(m);</span><br><span class="line"><span class="type">int</span> u,v,w;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line"><span class="built_in">read</span>(u),<span class="built_in">read</span>(v),<span class="built_in">read</span>(w);</span><br><span class="line">u--,v--;</span><br><span class="line">e[u].<span class="built_in">push_back</span>(node&#123;v,w&#125;);</span><br><span class="line">e[v].<span class="built_in">push_back</span>(node&#123;u,w&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> mas=<span class="number">1</span>&lt;&lt;n;</span><br><span class="line"><span class="type">int</span> to;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> s=<span class="number">0</span>;s&lt;mas;++s)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>((s&gt;&gt;i)&amp;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> edge:e[u=i])</span><br><span class="line"><span class="keyword">if</span>(!(s&gt;&gt;(to=edge.to)&amp;<span class="number">1</span>))&#123;</span><br><span class="line">dp[to][s^(<span class="number">1</span>&lt;&lt;to)]=<span class="built_in">max</span>(dp[to][s^(<span class="number">1</span>&lt;&lt;to)],dp[u][s]+edge.w);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;++i)&#123;</span><br><span class="line">ans=<span class="built_in">max</span>(ans,dp[i][mas<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给定一个图，求其中任意两点之间距离的最大值，不能重复访问（类似于最长路（也许））。&lt;/p&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路</summary>
      
    
    
    
    
    <category term="AT题解" scheme="http://example.com/tags/AT%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>ABC315E-Prerequisites题解</title>
    <link href="http://example.com/2023/08/19/ABC315E-Prerequisites%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2023/08/19/ABC315E-Prerequisites%E9%A2%98%E8%A7%A3/</id>
    <published>2023-08-19T13:51:01.000Z</published>
    <updated>2023-08-19T13:52:53.777Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>给定你 $n$ 本书，在读第 $i$ 本书的时候，必须先读完若干本书（怎么看着像拓扑排序），现在要求想读第 $1$ 本书之前，要先按顺序读完哪些书？</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>很显然，若读完第 $1$ 本书之前要先读完 $a_1,a_2,…..a_n$，那么又考虑子部分，即读 $a_1,a_2….a_n$ 又先需要读完哪些书。</p><p>显然可以用 dfs 搞定，深搜读当前书要先读哪些书，返回的时候加入 $ans$ 数组记录，并用 $vis$ 数组标记，最后输出 $ans$ 即可。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> P&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(P &amp;x)</span></span>&#123;</span><br><span class="line">   P res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">   <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">   <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   res=res*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line">x=res*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Max=<span class="number">200010</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">egde</span>&#123;</span><br><span class="line"><span class="type">int</span> to,nxt;</span><br><span class="line">&#125;e[Max&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> head[Max],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line">e[++cnt].to=v;</span><br><span class="line">e[cnt].nxt=head[u];</span><br><span class="line">head[u]=cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> c[Max];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; a[Max];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line"><span class="type">bool</span> vis[Max];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span></span>&#123;</span><br><span class="line">vis[u]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[u];i;i=e[i].nxt)&#123;</span><br><span class="line"><span class="type">int</span> to=e[i].to;</span><br><span class="line"><span class="keyword">if</span>(!vis[to] &amp;&amp; to!=fa)&#123;</span><br><span class="line"><span class="built_in">dfs</span>(to,u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans.<span class="built_in">push_back</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="built_in">read</span>(c[i]);</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=c[i];++j)&#123;</span><br><span class="line"><span class="built_in">read</span>(x);</span><br><span class="line">a[i].<span class="built_in">push_back</span>(x);</span><br><span class="line"><span class="built_in">add</span>(i,x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;c[<span class="number">1</span>];++i)&#123;</span><br><span class="line"><span class="type">int</span> p=a[<span class="number">1</span>][i];</span><br><span class="line"><span class="keyword">if</span>(!vis[p])&#123;</span><br><span class="line"><span class="built_in">dfs</span>(p,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();++i)&#123;</span><br><span class="line">cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;给定你 $n$ 本书，在读第 $i$ 本书的时候，必须先读完若干本书（怎么看着像拓扑排序），现在要求想读第 $1$ 本书之前，要先按顺序读完</summary>
      
    
    
    
    
    <category term="AT题解" scheme="http://example.com/tags/AT%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>欧拉函数</title>
    <link href="http://example.com/2023/08/18/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2023/08/18/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/</id>
    <published>2023-08-18T02:38:13.000Z</published>
    <updated>2023-08-18T07:31:30.627Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欧拉函数"><a href="#欧拉函数" class="headerlink" title="欧拉函数"></a>欧拉函数</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>欧拉函数(Euler’s totient function)，即 $\varphi(n)$，表示的是小于等于 $n$ 的数中与 $n$ 互质的数字个数，</p><p>例如 $\varphi(1)=1$。</p><h2 id="性质"><a href="#性质" class="headerlink" title="性质"></a>性质</h2><p>$\bullet 1.$ 欧拉函数是积性函数。</p><p>$\ \ $ 积性函数的意思是：如果有 $\gcd(a,b)=1$，那么则有 $\varphi(a)=\varphi(a) \times \varphi(b)$。</p><p>$\ \ $ 特别的，当 $n$ 为奇数时，$\varphi(2n)=\varphi(n)$。</p><p>$\bullet 2.$ 当 $n$ 为质数时，有 $\varphi(n)=n-1$。</p><p>$\bullet 3.$ $\forall n&gt;1,1$~$N$ 中所有与 $n$ 互质的数的和为 $\frac{n\cdot \varphi(n)}{2}$</p><p>$\hspace{0.5em}$ 证明：</p><p>$\hspace{0.5em}$ 根据更相相减法，因为 $\gcd(n,x)=\gcd(n,n-x)$，所以予 $n$ 互质的数 $x,n-x$ 成对出现，平均值为 $\frac{n}{2}$，故和为 $\frac{n\cdot \varphi(n)}{2}$</p><p>$\bullet 4.$ 若 $p$ 为质数，则 $\varphi(p^k)=p^k-p^{k-1}$。</p><p>$\hspace{0.5em}$ 证明：</p><p>$\hspace{0.5em}$ 因为 $p$ 为质数，所以与 $p$ 不互质的数就只能为 $p$ 的倍数，共 $p^{k-1}$ 个。所以减去这些就是 $\varphi(n)$ 的值。</p><p>$\bullet 5.$ 若 $p$ 为质数，若 $p\mathrel{|}n$ 且 $p^2\mathrel{|}n$，则 $\varphi(n)=\varphi(\frac{n}{p})\cdot p$；若$p$为质数，若 $p\mathrel{|}n$ 且 $p^2\nmid n$，则 $\varphi(n)=\varphi(\frac{n}{p})\cdot(p-1)$</p><p>$\hspace{0.5em}$ 证明：</p><p>$\hspace{0.5em}$ 第一条：因为 $n$ 与 $\frac{n}{p}$ 的质因子相同，只是 $p$ 的指数不同。所以 $\frac{\varphi(n)}{\varphi(\frac{n}{p})}=p$，即可得原式。</p><p>$\hspace{0.5em}$ 第二条：根据性质一，即欧拉函数为积性函数，可得 $\varphi(n)=\varphi(\frac{n}{p})\cdot\varphi(p)$，因为 $p$ 为质数，由性质二可得原式。</p><p>$\bullet 6.$ $n=\sum\limits_{d\mathrel{|}n}^{}\varphi(d)$。</p><p>$\hspace{0.5em}$ 证明如下图：<br><img src="https://s2.loli.net/2023/08/18/fkouvnErLYtq1Nx.png" alt=""></p><p><img src="https://s2.loli.net/2023/08/18/hjEt5WNvCesOfnX.png" alt=""></p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p><strong>举个栗子</strong>:<a href="https://vjudge.net/problem/HDU-2824">The Euler function</a></p><h4 id="题意：求-sum-limits-i-a-b-varphi-i"><a href="#题意：求-sum-limits-i-a-b-varphi-i" class="headerlink" title="题意：求$\sum\limits_{i=a}^{b}\varphi(i)$"></a>题意：求$\sum\limits_{i=a}^{b}\varphi(i)$</h4><p>如果枚举必定 $TLE$。</p><p>方法一：</p><p>用埃氏筛，由欧拉函数的展开式 $\varphi(N)=N\cdot\prod\limits_{质数p\mid N}^{}(\frac{p-1}{p})$，</p><p>对于筛出的每个质数 $p$，将 $p$ 的倍数的欧拉函数值除以 $p$ 再乘 $p-1$ 即可。</p><p>时间复杂度 $O(N\log N)$。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> P&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(P &amp;x)</span></span>&#123;</span><br><span class="line">   P res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">   <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">   <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   res=res*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line">x=res*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">3000005</span>;</span><br><span class="line"><span class="type">int</span> a[N],b[N],tot=<span class="number">1</span>,maxn;</span><br><span class="line"><span class="type">int</span> phi[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initprime</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++) phi[i]=(<span class="type">int</span>)i;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++) <span class="keyword">if</span>(phi[i]==(<span class="type">int</span>)i)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;=n;j+=i) phi[j]/=(<span class="type">int</span>)i,phi[j]*=(<span class="type">int</span>)(i<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) phi[i]+=phi[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">auto</span> solve=[&amp;]()&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a[tot],&amp;b[tot])!=EOF) maxn=<span class="built_in">max</span>(maxn,b[tot]),tot++;</span><br><span class="line"><span class="built_in">initprime</span>(maxn);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;tot;i++) <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,phi[b[i]]-phi[a[i]<span class="number">-1</span>]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二自己搜，不想写了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;欧拉函数&quot;&gt;&lt;a href=&quot;#欧拉函数&quot; class=&quot;headerlink&quot; title=&quot;欧拉函数&quot;&gt;&lt;/a&gt;欧拉函数&lt;/h1&gt;&lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h</summary>
      
    
    
    
    
    <category term="算法学习笔记" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>ABC314C-Rotate-Colored-Subsequence题解</title>
    <link href="http://example.com/2023/08/16/ABC314C-Rotate-Colored-Subsequence%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2023/08/16/ABC314C-Rotate-Colored-Subsequence%E9%A2%98%E8%A7%A3/</id>
    <published>2023-08-16T07:38:13.000Z</published>
    <updated>2023-08-18T07:31:03.521Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意-说真的看样例都比题面好懂"><a href="#题意-说真的看样例都比题面好懂" class="headerlink" title="题意(说真的看样例都比题面好懂):"></a>题意(说真的看样例都比题面好懂):</h2><p>给定一个长度为 $n$ 的字符串 $s$，以及一个类似于并查集的 $fa$ 数组的一个长度为 $m$ 序列 $a$ ，这可以近似的将 $a$ 数组理解为:若 $a_i=a_j$ ，则 $s_i$ 与 $s_j$ 属于一个集合(我自己的理解),<br>现在，将为同一个集合中的 $s_i,s_j,…..,s_p,s_k$ 变为 $s_k,s_i,s_j,……,s_p$，这相当于将整个集合位移一下。</p><p>求最后的字符串。</p><h2 id="新奇而奇怪的思路"><a href="#新奇而奇怪的思路" class="headerlink" title="新奇而奇怪的思路"></a><del>新奇而奇怪的</del>思路</h2><p>看到这道题我第一时间想到的居然是图论（不知道正解是不是），很显然，如果是同一个集合中的字符，则相当于这些字符连通，且是一个边数正好为集合大小的环。</p><p>由于需要位移，所以可以建图，再用 dfs 跑一遍,跑的过程中将答案记录到 $ans$ 中，最后输出即可。</p><p>难点是建图，显然我们需要建一个向前的环，倒着枚举，设 $q[a[i]]$ 为在 $a[i]$ 这个集合中的前一个的下标，有点抽象，可以理解为：当前为 $a[i]$ ，则 $q[a[i]]$ 表示在 $i$ 后面的第一个与 $a[i]$ 相等的数下标，这样建的边便是 add(i,q[a[i]]) ，但是保险起见我建的双向边。</p><p>由于集合的最后一个要向集合的第一个建边，所以再处理一下，最后 dfs 跑一遍记录答案。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> P&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(P &amp;x)</span></span>&#123;</span><br><span class="line">   P res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">   <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">   <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   res=res*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line">x=res*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> T=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">char</span> s[<span class="number">200020</span>];</span><br><span class="line"><span class="type">int</span> a[<span class="number">200020</span>];</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> Max=<span class="number">200020</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span>&#123;</span><br><span class="line"><span class="type">int</span> to,nxt;</span><br><span class="line">&#125;e[Max&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> head[Max],cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> v)</span></span>&#123;</span><br><span class="line">e[++cnt].to=v;</span><br><span class="line">e[cnt].nxt=head[u];</span><br><span class="line">head[u]=cnt;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; q;</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">200010</span>];</span><br><span class="line"><span class="type">char</span> ans[<span class="number">200010</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> k,<span class="type">int</span> fa)</span></span>&#123;</span><br><span class="line">vis[u]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[u];i;i=e[i].nxt)&#123;</span><br><span class="line"><span class="type">int</span> to=e[i].to;</span><br><span class="line"><span class="keyword">if</span>(to!=fa) <span class="built_in">dfs</span>(to,k+<span class="number">1</span>,u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">ans[u]=s[fa];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=head[u];i;i=e[i].nxt)&#123;</span><br><span class="line"><span class="type">int</span> to=e[i].to;</span><br><span class="line"><span class="keyword">if</span>(to!=fa) <span class="built_in">dfs</span>(to,k+<span class="number">1</span>,u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; fir;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n),<span class="built_in">read</span>(m);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;s[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;--i)&#123;</span><br><span class="line"><span class="keyword">if</span>(!q[a[i]]) q[a[i]]=i;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">add</span>(i,q[a[i]]);</span><br><span class="line"><span class="built_in">add</span>(q[a[i]],i);</span><br><span class="line">q[a[i]]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!fir[a[i]]) fir[a[i]]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[i])&#123;</span><br><span class="line"><span class="type">char</span> w=s[i];</span><br><span class="line"><span class="built_in">dfs</span>(i,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">ans[i]=s[fir[a[i]]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">cout&lt;&lt;ans[i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题意-说真的看样例都比题面好懂&quot;&gt;&lt;a href=&quot;#题意-说真的看样例都比题面好懂&quot; class=&quot;headerlink&quot; title=&quot;题意(说真的看样例都比题面好懂):&quot;&gt;&lt;/a&gt;题意(说真的看样例都比题面好懂):&lt;/h2&gt;&lt;p&gt;给定一个长度为 $n$ 的字</summary>
      
    
    
    
    
    <category term="AT题解" scheme="http://example.com/tags/AT%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>ABC312C-Approximate-Equalization-2题解</title>
    <link href="http://example.com/2023/08/16/ABC312C-Approximate-Equalization-2%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2023/08/16/ABC312C-Approximate-Equalization-2%E9%A2%98%E8%A7%A3/</id>
    <published>2023-08-16T07:37:36.000Z</published>
    <updated>2023-08-18T07:30:30.670Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>有一个长度为 $n$ 的序列 $a$，每次可以对其中一个数 $+1$，另一个数 $-1$，求最少要多少次操作使得所有数之间的差小于等于 $1$。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>因为我们要求所有数差值相等或者相差小于等于 $1$，所以设 $sum$为 $\sum\limits_{i=1}^{n}a_i$，但是可能会有余数的原因，所以有一些数为 $\lfloor\frac{sum}{n}\rfloor$，有一些为 $\lceil\frac{sum}{n}\rceil$。不妨设 $x$ 为前者，$y$ 为后者。</p><p>因为 $x \le y$，所以我们只需要使所有大于 $y$ 的数变成 $y$，所有小于 $x$ 的数变成 $x$ 即可。</p><p>思路与其他题解几乎大同小异，看看就行。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> P&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(P &amp;x)</span></span>&#123;</span><br><span class="line">   P res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">   <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">   <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   res=res*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line">x=res*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> a[<span class="number">200010</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="built_in">read</span>(a[i]);</span><br><span class="line">sum+=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> x=sum/n;</span><br><span class="line"><span class="type">int</span> y=x+<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> ans1=<span class="number">0</span>,ans2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;y) ans1+=a[i]-y;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a[i]&lt;x) ans2+=x-a[i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="built_in">max</span>(ans1,ans2)&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;有一个长度为 $n$ 的序列 $a$，每次可以对其中一个数 $+1$，另一个数 $-1$，求最少要多少次操作使得所有数之间的差小于等于 $1</summary>
      
    
    
    
    
    <category term="AT题解" scheme="http://example.com/tags/AT%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>ABC312C-Invisible-Hand题解</title>
    <link href="http://example.com/2023/08/16/ABC312C-Invisible-Hand%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2023/08/16/ABC312C-Invisible-Hand%E9%A2%98%E8%A7%A3/</id>
    <published>2023-08-16T07:37:00.000Z</published>
    <updated>2023-08-18T07:30:44.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>有一些卖家，每个人愿意用大于等于 $a_i$ 的价格出售苹果。</p><p>还有一些买家，每个人愿意用小于等于 $b_i$ 的价格购买苹果。</p><p>现在要求你给定苹果的价格，满足愿意出售的人大于等于愿意购买的人的情况下，苹果的价钱尽量小。</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>很显然的一道二分答案，由于我们不需要考虑人选的方案，只需考虑有多少人愿意卖或买，所以可以直接对 $a$ 数组和 $b$ 数组进行排序。</p><p>而后二分答案，每次用 $mid$ 在 $a$ 和 $b$ 数组中记录出有多少人，由于数组已经排序，所以这个可以使用 <code>lower_bound</code> 和 <code>upper_bound</code> 函数去查找有多少人在苹果价钱为 $mid$ 的情况下愿意买或卖。</p><p>因为当 $mid$ 越大时，愿意买的人越少，卖的人越多，所以满足单调性，可以二分。</p><p>至于为什么要使用 <code>upper_bound</code>，显然，如果我们在判断有多少人愿意买的时候只是用 <code>lower_bound</code>，那如果 $a$ 数组中不含 $mid$，那么 <code>lower_bound</code> 会查找到大于等于 $mid$ 的第一个数，其下标设为 $k$，那么愿意买的人就为 $k-1$，但如果 $a$ 含有 $mid$，则会找到 $mid$ 本身的下标，最后愿意买的人为 $k$，所以不妨直接使用 <code>upper_bound</code>，这样最后愿意买的人数都为 $k-1$。</p><p>注意 $1 \le a_i,b_i \le 10^9$，赛时死磕半天没看出来哪错了，结果…是因为 $r$ 的初始值开小了，开成 $10^9+100$ 即可，警钟长鸣。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span> </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> P&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(P &amp;x)</span></span>&#123;</span><br><span class="line">   P res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">   <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">   <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   res=res*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line">x=res*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[<span class="number">200010</span>];</span><br><span class="line"><span class="type">int</span> b[<span class="number">200010</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> sel=<span class="built_in">upper_bound</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>,x)-a<span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> bou=m-(<span class="built_in">lower_bound</span>(b+<span class="number">1</span>,b+m+<span class="number">1</span>,x)-b)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(sel&gt;=bou) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n),<span class="built_in">read</span>(m);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) <span class="built_in">read</span>(a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;++i) <span class="built_in">read</span>(b[i]);</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+m+<span class="number">1</span>);</span><br><span class="line"><span class="type">int</span> l=<span class="number">0</span>,r=<span class="number">1e9</span>+<span class="number">100</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line"><span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l=mid+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> r=mid<span class="number">-1</span>,ans=mid;</span><br><span class="line">&#125;;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意&quot;&gt;&lt;/a&gt;题意&lt;/h2&gt;&lt;p&gt;有一些卖家，每个人愿意用大于等于 $a_i$ 的价格出售苹果。&lt;/p&gt;
&lt;p&gt;还有一些买家，每个人愿意用小于等于 $b_i$ 的价格购买苹果</summary>
      
    
    
    
    
    <category term="AT题解" scheme="http://example.com/tags/AT%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>ABC314D-LOWER题解</title>
    <link href="http://example.com/2023/08/16/ABC314D-LOWER%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2023/08/16/ABC314D-LOWER%E9%A2%98%E8%A7%A3/</id>
    <published>2023-08-16T07:36:23.000Z</published>
    <updated>2023-08-18T07:31:17.097Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题意"><a href="#题意" class="headerlink" title="题意:"></a>题意:</h2><p>给定一个长度为 $n$ 的字符串，有 $m$ 次操作，每次操作给定两个整数 $t$ 和 $x$，以及一个字符 $c$，满足以下操作:</p><p>$\hspace{1em}\bullet$ 若 $t$ 为 $1$，则将字符串中的第 $x$ 个字符更改为 $c$</p><p>$\hspace{1em}\bullet$ 若 $t$ 为 $2$，则将字符串中的所有大写字母变为小写字母</p><p>$\hspace{1em}\bullet$ 若 $t$ 为 $3$，则将字符串中的所有小写字母变为大写字母</p><p>求最后的字符串</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路:"></a>思路:</h2><p>针对操作 $1$，直接更改即可，但是由于这个操作可能会改变原有字符串的性质(全部是大写\全部是小写)，所以可以维护一个 $map$，用来判断的是：在上一次使用操作 $2、3$ 后，字符串中的哪些位置又因为操作 $1$ 而更改。</p><p>针对操作 $2、3$，因为这两个操作之后，整个字符串要么全为大写，要么全为小写，所以用两个 $bool$ 的 $pd$ 和 $px$ 存储即可。</p><p>最后输出的时候，如果 $pd$ 或 $px$ 中有一个为一，这意味着最后一个操作不为操作 $1$，所以直接按大小写输出即可。</p><p>否则，意味着最后一步的操作必定为操作 $1$，字符串在改变大小写后又更改了，所以只需判断 $map$ 中当前的位置是否更改，更改的话输出原字符串，否则按最后一个操作 $2、3$ 后的字符串输出。</p><h2 id="代码-不喜勿喷"><a href="#代码-不喜勿喷" class="headerlink" title="代码(不喜勿喷)"></a>代码(不喜勿喷)</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> endl <span class="string">&quot;\n&quot;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> P&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(P &amp;x)</span></span>&#123;</span><br><span class="line">   P res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">   <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">   <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">   res=res*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">   ch=<span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line">x=res*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> T=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> Q;</span><br><span class="line"><span class="type">char</span> s[<span class="number">500010</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">read</span>(n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i) cin&gt;&gt;s[i];</span><br><span class="line"><span class="built_in">read</span>(Q);</span><br><span class="line"><span class="type">int</span> op,x;</span><br><span class="line"><span class="type">char</span> y;</span><br><span class="line"><span class="type">int</span> sumc=<span class="number">0</span>;</span><br><span class="line"><span class="type">bool</span> qd=<span class="number">0</span>,qx=<span class="number">0</span>;</span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">bool</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=Q;++i)&#123;</span><br><span class="line"><span class="built_in">read</span>(op),<span class="built_in">read</span>(x);</span><br><span class="line">cin&gt;&gt;y;</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">1</span>)&#123;</span><br><span class="line">s[x]=y;</span><br><span class="line">q[x]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>)&#123;</span><br><span class="line">qx=<span class="number">1</span>,qd=<span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">qd=<span class="number">1</span>,qx=<span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">clear</span>();</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(qx==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(q[i]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; s[i]&lt;=<span class="string">&#x27;Z&#x27;</span>) cout&lt;&lt;<span class="built_in">char</span>(s[i]+<span class="number">32</span>);</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;s[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;s[i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(qd==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(q[i]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; s[i]&lt;=<span class="string">&#x27;z&#x27;</span>) cout&lt;&lt;<span class="built_in">char</span>(s[i]<span class="number">-32</span>);</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;s[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;s[i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">cout&lt;&lt;s[i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题意&quot;&gt;&lt;a href=&quot;#题意&quot; class=&quot;headerlink&quot; title=&quot;题意:&quot;&gt;&lt;/a&gt;题意:&lt;/h2&gt;&lt;p&gt;给定一个长度为 $n$ 的字符串，有 $m$ 次操作，每次操作给定两个整数 $t$ 和 $x$，以及一个字符 $c$，满足以下操作:&lt;/</summary>
      
    
    
    
    
    <category term="AT题解" scheme="http://example.com/tags/AT%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
</feed>
